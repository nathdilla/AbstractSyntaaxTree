{
    "org.jabref.logic.importer.util.JsonReader.toJsonObject": null,
    "java.util.Collections.singletonList": {
        "class": "java.util.Collections",
        "function": "singletonList",
        "description": "Returns an immutable list containing only the specified object.\n The returned list is serializable."
    },
    "org.jabref.logic.util.strings.StringSimilarity.isSimilar": null,
    "org.jabref.model.entry.BibEntry.setType": null,
    "org.jabref.model.entry.BibEntry.setField": null,
    "org.jabref.model.util.OptionalUtil.combine": null,
    "java.util.Optional.empty": {
        "class": "java.util.Optional",
        "function": "empty",
        "description": "Returns an empty Optional instance.  No value is present for this\n Optional."
    },
    "java.util.Optional.ofNullable": {
        "class": "java.util.Optional",
        "function": "ofNullable",
        "description": "Returns an Optional describing the given value, if\n non-null, otherwise returns an empty Optional."
    },
    "org.apache.http.client.utils.URIBuilder.addParameter": null,
    "org.apache.http.client.utils.URIBuilder.build": null,
    "java.util.Collections.emptyList": {
        "class": "java.util.Collections",
        "function": "emptyList",
        "description": "Returns an empty list (immutable).  This list is serializable.\n\n This example illustrates the type-safe way to obtain an empty list:\n \n     List<String> s = Collections.emptyList();"
    },
    "java.util.stream.IntStream.range": {
        "class": "java.util.stream.IntStream",
        "function": "range",
        "description": "Returns a sequential ordered IntStream from startInclusive\n (inclusive) to endExclusive (exclusive) by an incremental step of\n 1."
    },
    "org.jabref.model.entry.AuthorList.collect": null,
    "java.util.ArrayList.add": {
        "class": "java.util.ArrayList",
        "function": "add",
        "description": "Appends the specified element to the end of this list."
    },
    "org.jabref.model.util.OptionalUtil.isPresentAnd": null,
    "org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter.format": null
}